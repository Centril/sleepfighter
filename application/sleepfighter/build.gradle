apply plugin: 'android'
apply plugin: 'idea'

// Config:
def getVersionCode() { 8 }
def getMinSdk() { 9 }
def getTargetSdk() { 19 }

def fetchProps( path ) {
	def Properties props = new Properties()
	def propFile = file( path )
	if ( propFile.canRead() ) {
		props.load( new FileInputStream( propFile ) )
		return props;
	}

	return null;
}

android {
	buildToolsVersion "19.0.1"

	// Override manifest stuff.
    compileSdkVersion getTargetSdk()
    defaultConfig {
        minSdkVersion getMinSdk()
        targetSdkVersion getTargetSdk()
	    versionCode getVersionCode()
    }

	// Using Java 7, but no try-with-resources.
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	// Fix: multiple jars have this file.
	packagingOptions {
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE.txt'
	}

	// Proguard settings:
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

	// Signing configuration:
	project.ext.releaseCfg = fetchProps( 'release.signing' )
	if ( releaseCfg != null && releaseCfg.containsKey( 'key.store' ) ) {
		def storeFileK = 'key.store'
		def keyAliasK = 'key.alias'
		def storePasswordK = 'key.store_password'
		def keyPasswordK = 'key.password'

		signingConfigs {
			debug {
				storeFile file("sleepfighter.debug.keystore")
				keyAlias 'androiddebugkey'
				storePassword 'android'
				keyPassword 'android'
			}
			release {
				storeFile file( releaseCfg.get( storeFileK ) )
				keyAlias releaseCfg.containsKey( keyAliasK ) ? releaseCfg.get( storeFileK ) : 'null'
				storePassword releaseCfg.containsKey( storePasswordK ) ? releaseCfg.get( storePasswordK ) : 'null'
				keyPassword releaseCfg.containsKey( keyPasswordK ) ? releaseCfg.get( keyPasswordK ) : 'null'
			}
		}
	} else {
		project.ext.releaseCfg = null
		signingConfigs {
			debug {
				storeFile file("sleepfighter.debug.keystore")
				keyAlias 'androiddebugkey'
				storePassword 'android'
				keyPassword 'android'
			}
			release {
				// Nothing here, resolve via cmd.
			}
		}
	}
	buildTypes {
		debug {
			signingConfig signingConfigs.debug
		}
		release {
			signingConfig signingConfigs.release
		}
	}

	// Introduce "releaseDebug" extending release but debuggable.
	buildTypes {
		debugRelease.initWith( buildTypes.release )
		debugRelease {
			debuggable      true
			signingConfig  signingConfigs.debug
		}
	}
	sourceSets.debugRelease.setRoot( 'src/release' )

	// Suffix all build types with type except for release, allowing parallel installs.
	buildTypes.each{ type ->
		type.packageNameSuffix = type.name == 'release' ? '' : ".$type.name"
	}
}

task askForPasswords << {
	// Must create String because System.readPassword() returns char[]
	// (and assigning that below fails silently)

	if ( project.releaseCfg == null ) {
		def storeFile = file( new String( System.console().readPassword("\nKeystore file: ") ) )
		android.signingConfigs.release.storeFile = storeFile
	}

	def keyAlias = new String( System.console().readPassword("\nKey alias: ") )
	def storePw = new String( System.console().readPassword("Keystore password: ") )
	def keyPw = new String( System.console().readPassword("Key password: ") )

	android.signingConfigs.release.keyPassword = keyAlias
	android.signingConfigs.release.keyPassword = storePw
	android.signingConfigs.release.keyPassword = keyPw
}
tasks.whenTaskAdded { theTask ->
	if ( theTask.name.equals( "packageRelease" ) ) {
		theTask.dependsOn "askForPasswords"
	}
}

// Declare dependencies.
dependencies {
	// From repositories, e.g Maven.
    compile 'com.android.support:support-v4:+'
    compile 'com.google.guava:guava:+' // was 15.0
    compile 'joda-time:joda-time:+' // was 2.3
    compile 'com.google.android.gms:play-services:+'
	compile 'com.j256.ormlite:ormlite-core:+' // was 4.47
	compile 'com.j256.ormlite:ormlite-android:+'
	compile 'org.apache.commons:commons-math3:+' // was 3.2
	compile 'net.engio:mbassador:1.1.9'
	compile 'com.mobeta.android.dslv:drag-sort-listview:0.6.1'
	compile 'net.simonvt.numberpicker:android-numberpicker:1.0.0@aar'

	// Add all jars in libs directory.
	compile fileTree( dir: 'libs', include: '*.jar' )
}