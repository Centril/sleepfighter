package se.chalmers.dat255.sleepfighter.challenge.minesweeper;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.ann.Constructor;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.cpp.CPPObject;
import se.chalmers.dat255.sleepfighter.challenge.minesweeper.SeChalmersDat255SleepfighterChallengeMinesweeperLibrary.GameState;
import se.chalmers.dat255.sleepfighter.challenge.minesweeper.SeChalmersDat255SleepfighterChallengeMinesweeperLibrary.logger;
import se.chalmers.dat255.sleepfighter.challenge.minesweeper.SeChalmersDat255SleepfighterChallengeMinesweeperLibrary.randomizer;
/**
 * <i>native declaration : line 189</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("se.chalmers.dat255.sleepfighter.challenge.minesweeper") 
public abstract class Board extends CPPObject {
	/** Original signature : <code>Board(const Dimensions, const int, randomizer, logger*)</code> */
	@Name("Board") 
	@Constructor(0) 
	public board(Dimensions dim, int mineCount, Pointer<randomizer > rng, Pointer<logger > log) {
		super((Void)null, 0, dim, mineCount, rng, log);
	}
	/**
	 * Original signature : <code>void print()</code><br>
	 * <i>native declaration : line 194</i>
	 */
	native public void print();
	/**
	 * Original signature : <code>GameState clickSquare(const Move&)</code><br>
	 * <i>native declaration : line 196</i>
	 */
	public IntValuedEnum<GameState > clickSquare(Pointer<Move > move) {
		return FlagSet.fromValue(clickSquare(Pointer.getPeer(move)), GameState.class);
	}
	protected native int clickSquare(@Ptr long move);
	/**
	 * Original signature : <code>Dimensions getDimensions()</code><br>
	 * <i>native declaration : line 198</i>
	 */
	native public Dimensions getDimensions();
	/**
	 * Original signature : <code>Square* getGrid()</code><br>
	 * <i>native declaration : line 199</i>
	 */
	public Pointer<Square > getGrid() {
		return Pointer.pointerToAddress(getGrid$2(), Square.class);
	}
	@Ptr 
	@Name("getGrid") 
	protected native long getGrid$2();
	/**
	 * Original signature : <code>Square& getSquare(const int, const int)</code><br>
	 * <i>native declaration : line 200</i>
	 */
	public Pointer<Square > getSquare(int row, int col) {
		return Pointer.pointerToAddress(getSquare$2(row, col), Square.class);
	}
	@Ptr 
	@Name("getSquare") 
	protected native long getSquare$2(int row, int col);
	/**
	 * Original signature : <code>bool isGenerated()</code><br>
	 * <i>native declaration : line 202</i>
	 */
	native public boolean isGenerated();
	/**
	 * Original signature : <code>Position posLoc(const int)</code><br>
	 * <i>native declaration : line 204</i>
	 */
	native public Position posLoc(int position);
	/**
	 * Original signature : <code>int locPos(const Move&)</code><br>
	 * <i>native declaration : line 206</i>
	 */
	public int locPos(Pointer<Move > move) {
		return locPos(Pointer.getPeer(move));
	}
	protected native int locPos(@Ptr long move);
	/**
	 * Original signature : <code>int locPos(const Position&)</code><br>
	 * <i>native declaration : line 207</i>
	 */
	@Name("locPos") 
	public int locPos$2(Pointer<Position > pos) {
		return locPos$2(Pointer.getPeer(pos));
	}
	@Name("locPos") 
	protected native int locPos$2(@Ptr long pos);
	/**
	 * Original signature : <code>int locPos(const int, const int)</code><br>
	 * <i>native declaration : line 208</i>
	 */
	native public int locPos(int col, int row);
	/**
	 * Original signature : <code>bool isValidPos(const Position&)</code><br>
	 * <i>native declaration : line 209</i>
	 */
	public boolean isValidPos(Pointer<Position > pos) {
		return isValidPos(Pointer.getPeer(pos));
	}
	protected native boolean isValidPos(@Ptr long pos);
	/**
	 * Original signature : <code>bool isValidPos(const int, const int)</code><br>
	 * <i>native declaration : line 210</i>
	 */
	native public boolean isValidPos(int col, int row);
	/**
	 * Original signature : <code>GameState resetToGenerated(const Move&)</code><br>
	 * <i>native declaration : line 212</i>
	 */
	public IntValuedEnum<GameState > resetToGenerated(Pointer<Move > initial) {
		return FlagSet.fromValue(resetToGenerated(Pointer.getPeer(initial)), GameState.class);
	}
	protected native int resetToGenerated(@Ptr long initial);
	/** C type : Square* */
	@Field(0) 
	public Pointer<Square > grid() {
		return this.io.getPointerField(this, 0);
	}
	/** C type : Square* */
	@Field(0) 
	public Board grid(Pointer<Square > grid) {
		this.io.setPointerField(this, 0, grid);
		return this;
	}
}
