package se.chalmers.dat255.sleepfighter.challenge.minesweeper;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.cpp.CPPObject;
/**
 * <i>native declaration : line 319</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("se.chalmers.dat255.sleepfighter.challenge.minesweeper") 
public class Minesweeper extends CPPObject {
	/**
	 * Original signature : <code>void configLogger(const int, const char*)</code><br>
	 * <i>native declaration : line 321</i>
	 */
	public void configLogger(int prio, Pointer<Byte > tag) {
		configLogger(prio, Pointer.getPeer(tag));
	}
	protected native void configLogger(int prio, @Ptr long tag);
	/**
	 * Original signature : <code>Game* makeGame(const MinesweeperConfig&, const Position&)</code><br>
	 * <i>native declaration : line 322</i>
	 */
	public Pointer<Game > makeGame(Pointer<MinesweeperConfig > config, Pointer<Position > pos) {
		return Pointer.pointerToAddress(makeGame(Pointer.getPeer(config), Pointer.getPeer(pos)), Game.class);
	}
	@Ptr 
	protected native long makeGame(@Ptr long config, @Ptr long pos);
	/**
	 * Original signature : <code>void freeGame(const Game*)</code><br>
	 * <i>native declaration : line 323</i>
	 */
	public void freeGame(Pointer<Game > game) {
		freeGame(Pointer.getPeer(game));
	}
	protected native void freeGame(@Ptr long game);
	public Minesweeper() {
		super();
	}
	public Minesweeper(Pointer pointer) {
		super(pointer);
	}
}
