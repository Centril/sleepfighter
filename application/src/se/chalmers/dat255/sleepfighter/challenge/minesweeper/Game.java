package se.chalmers.dat255.sleepfighter.challenge.minesweeper;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.ann.Constructor;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.cpp.CPPObject;
import se.chalmers.dat255.sleepfighter.challenge.minesweeper.SeChalmersDat255SleepfighterChallengeMinesweeperLibrary.GameState;
import se.chalmers.dat255.sleepfighter.challenge.minesweeper.SeChalmersDat255SleepfighterChallengeMinesweeperLibrary.logger;
import se.chalmers.dat255.sleepfighter.challenge.minesweeper.SeChalmersDat255SleepfighterChallengeMinesweeperLibrary.randomizer;
/**
 * <i>native declaration : line 255</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("se.chalmers.dat255.sleepfighter.challenge.minesweeper") 
public abstract class Game extends CPPObject {
	/** Original signature : <code>Game(const Dimensions, const int, randomizer, logger*)</code> */
	@Name("Game") 
	@Constructor(0) 
	public game(Dimensions dim, int mineCount, Pointer<randomizer > gen, Pointer<logger > log) {
		super((Void)null, 0, dim, mineCount, gen, log);
	}
	/**
	 * Original signature : <code>void print()</code><br>
	 * <i>native declaration : line 260</i>
	 */
	native public void print();
	/**
	 * Original signature : <code>Board* getBoard()</code><br>
	 * <i>native declaration : line 261</i>
	 */
	public Pointer<Board > getBoard() {
		return Pointer.pointerToAddress(getBoard$2(), Board.class);
	}
	@Ptr 
	@Name("getBoard") 
	protected native long getBoard$2();
	/**
	 * Original signature : <code>GameState getState()</code><br>
	 * <i>native declaration : line 262</i>
	 */
	public IntValuedEnum<GameState > getState() {
		return FlagSet.fromValue(getState$2(), GameState.class);
	}
	@Name("getState") 
	protected native int getState$2();
	/**
	 * Original signature : <code>logger* getLogger()</code><br>
	 * <i>native declaration : line 263</i>
	 */
	public Pointer<logger > getLogger() {
		return Pointer.pointerToAddress(getLogger$2(), logger.class);
	}
	@Ptr 
	@Name("getLogger") 
	protected native long getLogger$2();
	/**
	 * Original signature : <code>void resetToGenerated(const Move&)</code><br>
	 * <i>native declaration : line 264</i>
	 */
	public void resetToGenerated(Pointer<Move > initial) {
		resetToGenerated(Pointer.getPeer(initial));
	}
	protected native void resetToGenerated(@Ptr long initial);
	/**
	 * Original signature : <code>Move firstMove(const Position&)</code><br>
	 * <i>native declaration : line 265</i>
	 */
	public Move firstMove(Pointer<Position > pos) {
		return firstMove(Pointer.getPeer(pos));
	}
	protected native Move firstMove(@Ptr long pos);
	/**
	 * facade methods:<br>
	 * Original signature : <code>Dimensions getDimensions()</code><br>
	 * <i>native declaration : line 268</i>
	 */
	native public Dimensions getDimensions();
	/**
	 * Original signature : <code>Square& Game::getSquare(const int, const int)</code><br>
	 * <i>native declaration : line 269</i>
	 */
	@Name("Game::getSquare") 
	public Pointer<Square > game$getSquare(int row, int col) {
		return Pointer.pointerToAddress(game$getSquare$2(row, col), Square.class);
	}
	@Name("Game::getSquare") 
	@Ptr 
	@Name("game$getSquare") 
	protected native long game$getSquare$2(int row, int col);
	/**
	 * Original signature : <code>void acceptMove(Move&)</code><br>
	 * <i>native declaration : line 270</i>
	 */
	public void acceptMove(Pointer<Move > m) {
		acceptMove(Pointer.getPeer(m));
	}
	protected native void acceptMove(@Ptr long m);
	/** C type : Board */
	@Field(0) 
	public Board board() {
		return this.io.getNativeObjectField(this, 0);
	}
	/** C type : Board */
	@Field(0) 
	public Game board(Board board) {
		this.io.setNativeObjectField(this, 0, board);
		return this;
	}
	/** C type : GameState */
	@Field(1) 
	public IntValuedEnum<GameState > state() {
		return this.io.getEnumField(this, 1);
	}
	/** C type : GameState */
	@Field(1) 
	public Game state(IntValuedEnum<GameState > state) {
		this.io.setEnumField(this, 1, state);
		return this;
	}
	/** Conversion Error : logger* (failed to convert type to Java (undefined type)) */
}
