package se.chalmers.dat255.sleepfighter.challenge.minesweeper;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.Callback;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPRuntime;
/**
 * Wrapper for library <b>se.chalmers.dat255.sleepfighter.challenge.minesweeper</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("se.chalmers.dat255.sleepfighter.challenge.minesweeper") 
@Runtime(CPPRuntime.class) 
public class SeChalmersDat255SleepfighterChallengeMinesweeperLibrary {
	static {
		BridJ.register();
	}
	/**
	 * enum values<br>
	 * <i>native declaration : line 146</i>
	 */
	public enum GameState implements IntValuedEnum<GameState > {
		PROGRESS(0),
		WON(1),
		LOST(2);
		GameState(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<GameState > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<GameState > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : line 150</i>
	 */
	public enum ClickType implements IntValuedEnum<ClickType > {
		NORMAL(0),
		FLAG(1),
		QUESTION(2),
		EXPAND(3);
		ClickType(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<ClickType > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<ClickType > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : line 154</i>
	 */
	public enum SquareState implements IntValuedEnum<SquareState > {
		NOT_CLICKED(0),
		FLAG_CLICKED(1),
		QUESTION_CLICKED(2),
		CLICKED(3);
		SquareState(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<SquareState > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<SquareState > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
}
